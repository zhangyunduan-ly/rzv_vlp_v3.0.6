From 0e76d00beebc84982c6d01eedccc84677d38e65e Mon Sep 17 00:00:00 2001
From: trungvanle <trung.le.xk@renesas.com>
Date: Mon, 31 Jul 2023 13:55:05 +0700
Subject: [PATCH] Add number of output buffers option

Bypass mode has limitation with B-frames when reorder. This option is
added to solve this limitation.
Please note that this option is also supported in other modes.

Signed-off-by: trungvanle <trung.le.xk@renesas.com>
---
 omx/gstomxvideodec.c | 35 ++++++++++++++++++++++++++++++++---
 omx/gstomxvideodec.h |  2 ++
 2 files changed, 34 insertions(+), 3 deletions(-)

diff --git a/omx/gstomxvideodec.c b/omx/gstomxvideodec.c
index 08a26fd..76cc618 100644
--- a/omx/gstomxvideodec.c
+++ b/omx/gstomxvideodec.c
@@ -101,10 +101,13 @@ enum
   PROP_NO_REORDER,
   PROP_LOSSY_COMPRESS,
   PROP_ENABLE_CROP,
-  PROP_BYPASS
+  PROP_BYPASS,
+  PROP_NUM_OUTPUT_BUFFER
 };
 
 #define GST_OMX_VIDEO_DEC_INTERNAL_ENTROPY_BUFFERS_DEFAULT (5)
+#define GST_OMX_VIDEO_DEC_NUMBER_OUTPUT_BUFFERS_DEFAULT    (0)
+#define GST_OMX_VIDEO_DEC_NUMBER_OUTPUT_BUFFERS_MAXIMUM    (32)
 
 /* class initialization */
 
@@ -152,6 +155,9 @@ gst_omx_video_dec_set_property (GObject * object, guint prop_id,
     case PROP_BYPASS:
       self->bypass = g_value_get_boolean (value);
       break;
+    case PROP_NUM_OUTPUT_BUFFER:
+      self->num_outbufs = g_value_get_uint (value);
+      break;
 #else
     case PROP_NO_REORDER:
       GST_WARNING_OBJECT (self, "HAVE_VIDEODEC_EXT not enabled. Couldn't configure property no-reorder (require vendor specific implement).\n");
@@ -199,6 +205,9 @@ gst_omx_video_dec_get_property (GObject * object, guint prop_id,
     case PROP_BYPASS:
       g_value_set_boolean (value, self->bypass);
       break;
+    case PROP_NUM_OUTPUT_BUFFER:
+      g_value_set_uint (value, self->num_outbufs);
+      break;
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
       break;
@@ -260,6 +269,14 @@ gst_omx_video_dec_class_init (GstOMXVideoDecClass * klass)
           "Whether or not to use Bypass mode in OMX",
           FALSE, G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS |
           GST_PARAM_MUTABLE_READY));
+   g_object_class_install_property (gobject_class, PROP_NUM_OUTPUT_BUFFER,
+      g_param_spec_uint ("num-outbufs",
+          "Number of output buffers",
+          "Number of buffers that are required on output port",
+          0, GST_OMX_VIDEO_DEC_NUMBER_OUTPUT_BUFFERS_MAXIMUM,
+          GST_OMX_VIDEO_DEC_NUMBER_OUTPUT_BUFFERS_DEFAULT,
+          G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS |
+          GST_PARAM_MUTABLE_READY));
 
   element_class->change_state =
       GST_DEBUG_FUNCPTR (gst_omx_video_dec_change_state);
@@ -306,6 +323,9 @@ gst_omx_video_dec_init (GstOMXVideoDec * self)
   self->has_set_property = FALSE;
   self->enable_crop = FALSE;
   self->bypass = FALSE;
+  /* The default value is 0, which means the number of output buffers will be
+   * automatically updated when allocated */
+  self->num_outbufs = GST_OMX_VIDEO_DEC_NUMBER_OUTPUT_BUFFERS_DEFAULT;
 
   gst_video_decoder_set_packetized (GST_VIDEO_DECODER (self), TRUE);
   gst_video_decoder_set_use_default_pad_acceptcaps (GST_VIDEO_DECODER_CAST
@@ -899,6 +919,7 @@ gst_omx_video_dec_allocate_output_buffers (GstOMXVideoDec * self)
   gboolean eglimage = FALSE, add_videometa = FALSE;
   GstCaps *caps = NULL;
   guint min = 0, max = 0;
+  guint min_outbuf = 0;
   GstVideoCodecState *state =
       gst_video_decoder_get_output_state (GST_VIDEO_DECODER (self));
 
@@ -926,8 +947,16 @@ gst_omx_video_dec_allocate_output_buffers (GstOMXVideoDec * self)
       goto done;
     }
 
-    /* Need at least 4 buffers for anything meaningful */
-    min = MAX (min + port->port_def.nBufferCountMin, 4);
+    /* Need at least 4 buffers for anything meaningful but Bypass mode need
+     * at least 5 buffers */
+    min_outbuf = self->bypass ? 5 : 4;
+    if (self->num_outbufs)
+      min = MAX (min + port->port_def.nBufferCountMin,
+                 (self->num_outbufs > min_outbuf) ?
+                  self->num_outbufs : min_outbuf);
+    else
+      min = MAX (min + port->port_def.nBufferCountMin, min_outbuf);
+
     if (max == 0) {
       max = min;
     } else if (max < min) {
diff --git a/omx/gstomxvideodec.h b/omx/gstomxvideodec.h
index 4c8010f..879c03b 100644
--- a/omx/gstomxvideodec.h
+++ b/omx/gstomxvideodec.h
@@ -123,6 +123,8 @@ struct _GstOMXVideoDec
   gboolean enable_crop;
   /* Set TRUE to use Bypass mode in OMX */
   gboolean bypass;
+  /* Number of output buffers that are required on output port */
+  guint32 num_outbufs;
 };
 
 struct _GstOMXVideoDecClass
-- 
2.25.1

